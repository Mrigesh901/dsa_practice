Given an array of integers and a number K. Find the count of distinct elements in every window of size K in the array.

Example 1:

Input:
N = 7, K = 4
A[] = {1,2,1,3,4,2,3}
Output: 3 4 4 3
Explanation: Window 1 of size k = 4 is
1 2 1 3. Number of distinct elements in
this window are 3. 
Window 2 of size k = 4 is 2 1 3 4. Number
of distinct elements in this window are 4.
Window 3 of size k = 4 is 1 3 4 2. Number
of distinct elements in this window are 4.
Window 4 of size k = 4 is 3 4 2 3. Number
of distinct elements in this window are 3.
Example 2:

Input:
N = 3, K = 2
A[] = {4,1,1}
Output: 2 1
Your Task:
Your task is to complete the function countDistinct() which takes the array A[], the size of the array(N) and the window size(K) as inputs and returns an array containing the count of distinct elements in every contiguous window of size K in the array A[].

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(N).

Constraints:
1 <= K <= N <= 105
1 <= A[i] <= 105 , for each valid i

















--------------------------------------------------------------------------------------------------------------------------------------------------









class Solution:
    def countDistinct(self, A, N, K):
        # Code here
        i = 0
        j = 0
        count = []
        window = {}
    
        while j<N:
            if j-i+1<K:
                if A[j] not in window:
                    window[(A[j])]=1
                else:
                    window[(A[j])]+=1
            elif j-i+1==K:
                if A[j] not in window:
                    window[(A[j])]=1
                else:
                    window[(A[j])]+=1
                count.append(len(window))
                if window[A[i]]==1:
                    del window[A[i]]
                else:
                    window[A[i]]-=1
                i+=1
            j+=1
        return count
